# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: order.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0border.proto\x12\x05order\x1a\x1bgoogle/protobuf/empty.proto\"N\n\x12\x43reateOrderRequest\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x12\n\norder_name\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\"&\n\x13\x43reateOrderResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\",\n\x19\x43heckUserExistenceRequest\x12\x0f\n\x07user_id\x18\x01 \x01(\t2T\n\x0cOrderService\x12\x44\n\x0b\x43reateOrder\x12\x19.order.CreateOrderRequest\x1a\x1a.order.CreateOrderResponse2d\n\x12UserExistenceCheck\x12N\n\x12\x43heckUserExistence\x12 .order.CheckUserExistenceRequest\x1a\x16.google.protobuf.Emptyb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'order_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_CREATEORDERREQUEST']._serialized_start=51
  _globals['_CREATEORDERREQUEST']._serialized_end=129
  _globals['_CREATEORDERRESPONSE']._serialized_start=131
  _globals['_CREATEORDERRESPONSE']._serialized_end=169
  _globals['_CHECKUSEREXISTENCEREQUEST']._serialized_start=171
  _globals['_CHECKUSEREXISTENCEREQUEST']._serialized_end=215
  _globals['_ORDERSERVICE']._serialized_start=217
  _globals['_ORDERSERVICE']._serialized_end=301
  _globals['_USEREXISTENCECHECK']._serialized_start=303
  _globals['_USEREXISTENCECHECK']._serialized_end=403
# @@protoc_insertion_point(module_scope)
